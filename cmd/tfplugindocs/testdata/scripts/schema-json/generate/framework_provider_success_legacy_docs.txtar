# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

# Successful run of tfplugindocs on a Framework provider with docs in the legacy directory structure (i.e. r/<resource name>.md.tmpl)
[!unix] skip
exec tfplugindocs --provider-name=terraform-provider-scaffolding --providers-schema=schema.json
cmp stdout expected-output.txt

# Check that static files copied successfully to rendered docs directory
cmp templates/r/example.md docs/r/example.md
cmp templates/r/example.markdown docs/r/example.markdown
cmp templates/r/example.html.markdown docs/r/example.html.markdown
cmp templates/r/example.html.md docs/r/example.html.md

cmp templates/d/example.md docs/d/example.md
cmp templates/d/example.markdown docs/d/example.markdown
cmp templates/d/example.html.markdown docs/d/example.html.markdown
cmp templates/d/example.html.md docs/d/example.html.md

cmp templates/functions/example.md docs/functions/example.md
cmp templates/functions/example.markdown docs/functions/example.markdown
cmp templates/functions/example.html.markdown docs/functions/example.html.markdown
cmp templates/functions/example.html.md docs/functions/example.html.md

cmp templates/ephemeral-resources/example.md docs/ephemeral-resources/example.md
cmp templates/ephemeral-resources/example.markdown docs/ephemeral-resources/example.markdown
cmp templates/ephemeral-resources/example.html.markdown docs/ephemeral-resources/example.html.markdown
cmp templates/ephemeral-resources/example.html.md docs/ephemeral-resources/example.html.md

cmp templates/actions/example.md docs/actions/example.md
cmp templates/actions/example.markdown docs/actions/example.markdown
cmp templates/actions/example.html.markdown docs/actions/example.html.markdown
cmp templates/actions/example.html.md docs/actions/example.html.md

cmp templates/list-resources/example.md docs/list-resources/example.md
cmp templates/list-resources/example.markdown docs/list-resources/example.markdown
cmp templates/list-resources/example.html.markdown docs/list-resources/example.html.markdown
cmp templates/list-resources/example.html.md docs/list-resources/example.html.md

cmp templates/index.md docs/index.md
cmp templates/index.markdown docs/index.markdown
cmp templates/index.html.markdown docs/index.html.markdown
cmp templates/index.html.md docs/index.html.md
-- expected-output.txt --
rendering website for provider "terraform-provider-scaffolding" (as "terraform-provider-scaffolding")
copying any existing content to tmp dir
exporting schema from JSON file
getting provider schema
generating missing templates
generating missing resource content
resource "scaffolding_example" static file exists, skipping
generating missing data source content
data-source "scaffolding_example" static file exists, skipping
generating missing function content
function "example" static file exists, skipping
generating missing ephemeral resource content
ephemeral resource "scaffolding_example" static file exists, skipping
generating missing action content
action "scaffolding_example" static file exists, skipping
generating missing list resource content
list resource "scaffolding_example" static file exists, skipping
generating missing provider content
provider "terraform-provider-scaffolding" static file exists, skipping
rendering static website
cleaning rendered website dir
rendering templated website to static markdown
copying non-template file: "actions/example.html.markdown"
copying non-template file: "actions/example.html.md"
copying non-template file: "actions/example.markdown"
copying non-template file: "actions/example.md"
copying non-template file: "d/example.html.markdown"
copying non-template file: "d/example.html.md"
copying non-template file: "d/example.markdown"
copying non-template file: "d/example.md"
copying non-template file: "ephemeral-resources/example.html.markdown"
copying non-template file: "ephemeral-resources/example.html.md"
copying non-template file: "ephemeral-resources/example.markdown"
copying non-template file: "ephemeral-resources/example.md"
copying non-template file: "functions/example.html.markdown"
copying non-template file: "functions/example.html.md"
copying non-template file: "functions/example.markdown"
copying non-template file: "functions/example.md"
copying non-template file: "index.html.markdown"
copying non-template file: "index.html.md"
copying non-template file: "index.markdown"
copying non-template file: "index.md"
copying non-template file: "list-resources/example.html.markdown"
copying non-template file: "list-resources/example.html.md"
copying non-template file: "list-resources/example.markdown"
copying non-template file: "list-resources/example.md"
copying non-template file: "r/example.html.markdown"
copying non-template file: "r/example.html.md"
copying non-template file: "r/example.markdown"
copying non-template file: "r/example.md"
-- templates/actions/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/actions/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/actions/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/actions/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/list-resources/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/list-resources/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/list-resources/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/list-resources/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/r/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/r/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/r/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/r/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/d/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/d/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/d/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/d/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/functions/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/functions/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/functions/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/functions/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/ephemeral-resources/example.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/ephemeral-resources/example.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/ephemeral-resources/example.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/ephemeral-resources/example.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/index.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/index.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/index.html.markdown --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- templates/index.html.md --
# Data Fields

Name: {{.Name}}
Type: {{.Type}}
-- examples/README.md --
# Examples

This directory contains examples that are mostly used for documentation, but can also be run/tested manually via the Terraform CLI.

The document generation tool looks for files in the following locations by default. All other *.tf files besides the ones mentioned below are ignored by the documentation tool. This is useful for creating examples that can run and/or ar testable even if some parts are not relevant for the documentation.

* **provider/provider.tf** example file for the provider index page
* **data-sources/`full data source name`/data-source.tf** example file for the named data source page
* **resources/`full resource name`/resource.tf** example file for the named data source page
-- examples/actions/scaffolding_example/action.tf --
action "scaffolding_example" "example" {
  config {
    required_attr = "some-value"
  }
}
-- examples/list-resources/scaffolding_example/list-resource.tfquery.hcl --
list "scaffolding_example" "example" {
  provider = scaffolding

  config {
    required_attr = "some-value"
  }
}
-- examples/data-sources/scaffolding_example/data-source.tf --
data "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/provider/provider.tf --
provider "scaffolding" {
  # example configuration here
}
-- examples/resources/scaffolding_example/resource.tf --
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/ephemeral-resources/scaffolding_example/ephemeral-resource.tf --
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/resources/scaffolding_example/import-by-string-id.tf --
import {
  to = scaffolding_example.example
  id = "id-123"
}

resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/resources/scaffolding_example/import.sh --
terraform import scaffolding_example.example "id-123"
-- schema.json --
{
    "format_version": "1.0",
    "provider_schemas": {
        "registry.terraform.io/hashicorp/scaffolding": {
            "provider": {
                "version": 0,
                "block": {
                    "attributes": {
                        "endpoint": {
                            "type": "string",
                            "description": "Example provider attribute",
                            "description_kind": "markdown",
                            "optional": true
                        }
                    },
                    "description": "Example provider",
                    "description_kind": "markdown"
                }
            },
            "list_resource_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "required_attr": {
                                "type": "string",
                                "description": "Example required attribute",
                                "description_kind": "plain",
                                "required": true
                            },
                            "optional_attr": {
                                "type": "string",
                                "description": "Example optional attribute",
                                "description_kind": "plain",
                                "optional": true
                            }
                        },
                        "description": "Example list resource",
                        "description_kind": "plain"
                    }
                }
            },
            "action_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "required_attr": {
                                "type": "string",
                                "description": "Example required attribute",
                                "description_kind": "plain",
                                "required": true
                            },
                            "optional_attr": {
                                "type": "string",
                                "description": "Example optional attribute",
                                "description_kind": "plain",
                                "optional": true
                            }
                        },
                        "description": "Example action",
                        "description_kind": "plain"
                    }
                }
            },
            "resource_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "defaulted": {
                                "type": "string",
                                "description": "Example configurable attribute with default value",
                                "description_kind": "markdown",
                                "optional": true,
                                "computed": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example resource",
                        "description_kind": "markdown"
                    }
                }
            },
            "ephemeral_resource_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "defaulted": {
                                "type": "string",
                                "description": "Example configurable attribute with default value",
                                "description_kind": "markdown",
                                "optional": true,
                                "computed": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example ephemeral resource",
                        "description_kind": "markdown"
                    }
                }
            },
            "data_source_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example data source",
                        "description_kind": "markdown"
                    }
                }
            },
            "functions": {
                "example": {
                    "description": "Given a string value, returns the same value.",
                    "summary": "Echo a string",
                    "return_type": "string",
                    "parameters": [
                        {
                            "name": "input",
                            "description": "Value to echo.",
                            "type": "string"
                        }
                    ],
                    "variadic_parameter": {
                        "name": "variadicInput",
                        "description": "Variadic input to echo.",
                        "type": "string"
                    }
                }
            }
        }
    }
}