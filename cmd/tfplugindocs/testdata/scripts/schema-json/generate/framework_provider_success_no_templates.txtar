# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

# Successful run of tfplugindocs on a Framework provider with examples but no templates or pre-exiting docs.
[!unix] skip
exec tfplugindocs --provider-name=terraform-provider-scaffolding --providers-schema=schema.json --rendered-provider-name=Scaffolding
cmp stdout expected-output.txt
cmp docs/index.md expected-index.md
cmp docs/data-sources/example.md expected-datasource.md
cmp docs/resources/example.md expected-resource.md
cmp docs/functions/example.md expected-function.md
cmp docs/functions/no-variadic.md expected-no-variadic-function.md
cmp docs/ephemeral-resources/example.md expected-ephemeral-resource.md

-- expected-output.txt --
rendering website for provider "terraform-provider-scaffolding" (as "Scaffolding")
exporting schema from JSON file
getting provider schema
generating missing templates
generating missing resource content
generating new template for "scaffolding_example"
generating missing data source content
generating new template for data-source "scaffolding_example"
generating missing function content
generating new template for function "example"
generating new template for function "no-variadic"
generating missing ephemeral resource content
generating new template for "scaffolding_example"
generating missing provider content
generating new template for "terraform-provider-scaffolding"
rendering static website
cleaning rendered website dir
rendering templated website to static markdown
rendering "data-sources/example.md.tmpl"
rendering "ephemeral-resources/example.md.tmpl"
rendering "functions/example.md.tmpl"
rendering "functions/no-variadic.md.tmpl"
rendering "index.md.tmpl"
rendering "resources/example.md.tmpl"
-- expected-datasource.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "scaffolding_example Data Source - Scaffolding"
subcategory: ""
description: |-
  Example data source
---

# scaffolding_example (Data Source)

Example data source

## Example Usage

```terraform
data "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Optional

- `configurable_attribute` (String) Example configurable attribute

### Read-Only

- `id` (String) Example identifier
-- expected-function.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "example function - Scaffolding"
subcategory: ""
description: |-
  Echo a string
---

# function: example

Given a string value, returns the same value.

## Example Usage

```terraform
output "test" {
  value = provider::scaffolding::example("testvalue1", "testvalue2")
}
```

## Signature

<!-- signature generated by tfplugindocs -->
```text
example(input string, variadicInput string...) string
```

## Arguments

<!-- arguments generated by tfplugindocs -->
1. `input` (String) Value to echo.
<!-- variadic argument generated by tfplugindocs -->
1. `variadicInput` (Variadic, String) Variadic input to echo.
-- expected-no-variadic-function.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "no-variadic function - Scaffolding"
subcategory: ""
description: |-
  Echo a string
---

# function: no-variadic

Given a string value, returns the same value.

## Example Usage

```terraform
output "test" {
  value = provider::scaffolding::no-variadic("testvalue1")
}
```

## Signature

<!-- signature generated by tfplugindocs -->
```text
no-variadic(input string) string
```

## Arguments

<!-- arguments generated by tfplugindocs -->
1. `input` (String) Value to echo.
-- expected-index.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "Scaffolding Provider"
description: |-
  Example provider
---

# Scaffolding Provider

Example provider

## Example Usage

```terraform
provider "scaffolding" {
  # example configuration here
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Optional

- `endpoint` (String) Example provider attribute
-- expected-resource.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "scaffolding_example Resource - Scaffolding"
subcategory: ""
description: |-
  Example resource
---

# scaffolding_example (Resource)

Example resource

## Example Usage

```terraform
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Optional

- `configurable_attribute` (String) Example configurable attribute
- `defaulted` (String) Example configurable attribute with default value

### Read-Only

- `id` (String) Example identifier

## Import

Import is supported using the following syntax:

In Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute, for example:

```terraform
import {
  to = scaffolding_example.example
  identity = {
    name    = "austin"
    project = "test-project-123" # can also be read via SCAFFOLDING_PROJECT environment variable
    region  = "us-east-2"        # can also be read via SCAFFOLDING_REGION environment variable
  }
}

resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
```

<!-- schema generated by tfplugindocs -->
### Identity Schema

#### Required for Import

- `name` (String) Name of resource.

#### Optional for Import

- `project` (String) Project of resource, can also be sourced via `SCAFFOLDING_PROJECT` environment variable.
- `region` (String) Region of resource, can also be sourced via `SCAFFOLDING_REGION` environment variable.

In Terraform v1.5.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `id` attribute, for example:

```terraform
import {
  to = scaffolding_example.example
  id = "id-123"
}

resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
```
-- expected-ephemeral-resource.md --
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "scaffolding_example Ephemeral Resource - Scaffolding"
subcategory: ""
description: |-
  Example ephemeral resource
---

# scaffolding_example (Ephemeral Resource)

Example ephemeral resource

## Example Usage

```terraform
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Optional

- `configurable_attribute` (String) Example configurable attribute
- `defaulted` (String) Example configurable attribute with default value

### Read-Only

- `id` (String) Example identifier
-- examples/README.md --
# Examples

This directory contains examples that are mostly used for documentation, but can also be run/tested manually via the Terraform CLI.

The document generation tool looks for files in the following locations by default. All other *.tf files besides the ones mentioned below are ignored by the documentation tool. This is useful for creating examples that can run and/or ar testable even if some parts are not relevant for the documentation.

* **provider/provider.tf** example file for the provider index page
* **data-sources/`full data source name`/data-source.tf** example file for the named data source page
* **resources/`full resource name`/resource.tf** example file for the named data source page
-- examples/data-sources/scaffolding_example/data-source.tf --
data "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/functions/example/function.tf --
output "test" {
  value = provider::scaffolding::example("testvalue1", "testvalue2")
}
-- examples/functions/no-variadic/function.tf --
output "test" {
  value = provider::scaffolding::no-variadic("testvalue1")
}
-- examples/provider/provider.tf --
provider "scaffolding" {
  # example configuration here
}
-- examples/resources/scaffolding_example/import-id.tf --
import {
  to = scaffolding_example.example
  id = "id-123"
}

resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/resources/scaffolding_example/import-identity.tf --
import {
  to = scaffolding_example.example
  identity = {
    name    = "austin"
    project = "test-project-123" # can also be read via SCAFFOLDING_PROJECT environment variable
    region  = "us-east-2"        # can also be read via SCAFFOLDING_REGION environment variable
  }
}

resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/resources/scaffolding_example/resource.tf --
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}
-- examples/ephemeral-resources/scaffolding_example/ephemeral-resource.tf --
resource "scaffolding_example" "example" {
  configurable_attribute = "some-value"
}

-- schema.json --
{
    "format_version": "1.0",
    "provider_schemas": {
        "registry.terraform.io/hashicorp/scaffolding": {
            "provider": {
                "version": 0,
                "block": {
                    "attributes": {
                        "endpoint": {
                            "type": "string",
                            "description": "Example provider attribute",
                            "description_kind": "markdown",
                            "optional": true
                        }
                    },
                    "description": "Example provider",
                    "description_kind": "markdown"
                }
            },
            "resource_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "defaulted": {
                                "type": "string",
                                "description": "Example configurable attribute with default value",
                                "description_kind": "markdown",
                                "optional": true,
                                "computed": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example resource",
                        "description_kind": "markdown"
                    }
                }
            },
            "resource_identity_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "attributes": {
                        "name": {
                            "type": "string",
                            "description": "Name of resource.",
                            "required_for_import": true
                        },
                        "project": {
                            "type": "string",
                            "description": "Project of resource, can also be sourced via `SCAFFOLDING_PROJECT` environment variable.",
                            "optional_for_import": true
                        },
                        "region": {
                            "type": "string",
                            "description": "Region of resource, can also be sourced via `SCAFFOLDING_REGION` environment variable.",
                            "optional_for_import": true
                        }
                    }
                }
            },
            "ephemeral_resource_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "defaulted": {
                                "type": "string",
                                "description": "Example configurable attribute with default value",
                                "description_kind": "markdown",
                                "optional": true,
                                "computed": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example ephemeral resource",
                        "description_kind": "markdown"
                    }
                }
            },
            "data_source_schemas": {
                "scaffolding_example": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "configurable_attribute": {
                                "type": "string",
                                "description": "Example configurable attribute",
                                "description_kind": "markdown",
                                "optional": true
                            },
                            "id": {
                                "type": "string",
                                "description": "Example identifier",
                                "description_kind": "markdown",
                                "computed": true
                            }
                        },
                        "description": "Example data source",
                        "description_kind": "markdown"
                    }
                }
            },
            "functions": {
                "example": {
                    "description": "Given a string value, returns the same value.",
                    "summary": "Echo a string",
                    "return_type": "string",
                    "parameters": [
                        {
                            "name": "input",
                            "description": "Value to echo.",
                            "type": "string"
                        }
                    ],
                    "variadic_parameter": {
                        "name": "variadicInput",
                        "description": "Variadic input to echo.",
                        "type": "string"
                    }
                },
                 "no-variadic": {
                    "description": "Given a string value, returns the same value.",
                    "summary": "Echo a string",
                    "return_type": "string",
                    "parameters": [
                        {
                            "name": "input",
                            "description": "Value to echo.",
                            "type": "string"
                        }
                    ]
                }
            }
        }
    }
}