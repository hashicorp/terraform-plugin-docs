// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"bytes"

	tfjson "github.com/hashicorp/terraform-json"
	"github.com/hashicorp/terraform-plugin-docs/internal/schemamd"
)

const actionSchemaComment = "<!-- action schema generated by tfplugindocs -->"

type actionTemplate string

type ActionTemplateType struct {
	Type        string
	Name        string
	Description string

	HasExample   bool
	HasExamples  bool
	ExampleFile  string
	ExampleFiles []string

	ProviderName      string
	ProviderShortName string

	SchemaMarkdown string

	RenderedProviderName string
}

func (t actionTemplate) Render(providerDir, name, providerName, renderedProviderName, typeName, exampleFile string, exampleFiles []string, schema *tfjson.ActionSchema) (string, error) {
	schemaBuffer := bytes.NewBuffer(nil)
	err := schemamd.RenderAction(schema, schemaBuffer)
	if err != nil {
		return "", err
	}

	s := string(t)
	if s == "" {
		return "", nil
	}

	return renderStringTemplate(providerDir, "actionTemplate", s, ActionTemplateType{
		Type:        typeName,
		Name:        name,
		Description: schema.Block.Description,

		HasExample:   exampleFile != "" && fileExists(exampleFile),
		HasExamples:  len(exampleFiles) > 0,
		ExampleFile:  exampleFile,
		ExampleFiles: exampleFiles,

		ProviderName:      providerName,
		ProviderShortName: providerShortName(renderedProviderName),

		SchemaMarkdown: actionSchemaComment + "\n" + schemaBuffer.String(),

		RenderedProviderName: renderedProviderName,
	})
}

const defaultActionTemplate actionTemplate = `---
` + frontmatterComment + `
page_title: "{{.Name}} {{.Type}} - {{.RenderedProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

{{ if .HasExamples -}}
## Example Usage

{{- range .ExampleFiles }}

{{ tffile . }}
{{- end }}
{{- end }}

{{ .SchemaMarkdown | trimspace }}
`
